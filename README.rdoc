
{<img src="https://circleci.com/gh/rubakas/magaz/tree/develop.svg?style=svg&circle-token=db374f1ac92f3a351e12fec6774422d96e62f032" alt="CircleCI" />}[https://circleci.com/gh/rubakas/magaz/tree/develop]

== README

* Branching policy just use git-flow
  http://buildamodule.com/video/change-management-and-version-control-deploying-releases-features-and-fixes-with-git-how-to-use-a-scalable-git-branching-model-called-gitflow

  install git-flow
  https://github.com/nvie/gitflow

* Ruby version: 2.3.1
  just use rvm or rbenv

* Postgresql database

* Memcached for sessions

* Rmagick (and imagemagick for it)

* Phantomjs for poltergeist

* Environment variables emulated via .env.development and .env.production files:
    cp .env.example .env.development
    cp .env.example .env.test

* Database creation:

    cp config/database.yml.example config/database.yml
    bundle exec rake db:create
    bundle exec rake db:migrate

* Domain names:
  add into /etc/hosts

    127.0.0.1 magaz.local
    127.0.0.1 example.magaz.local
    127.0.0.1 example2.magaz.local
    127.0.0.1 example3.magaz.local
    127.0.0.1 themes.magaz.local

* For Mac
    ::1       magaz.local
    ::1       example.magaz.local
    ::1       example2.magaz.local
    ::1       example3.magaz.local
    ::1       themes.magaz.local

* How to run the test suite

    bundle exec rake test
    bundle exec rake test TEST=test/single_test.rb
    bundle exec rake test TEST=test/directory/*

    # for store acceptance tests only
    bundle exec rake cucumber


* Services
  * postgresql as database
  * memcache for session storage
  * redis for background jobs queue

* Deployment instructions
  so far

    bundle exec rails server

  is enough

Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
